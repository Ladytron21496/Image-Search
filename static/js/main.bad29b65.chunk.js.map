{"version":3,"sources":["components/header.js","components/card.js","components/maincontent.js","components/searchsection.js","components/imagemodal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Card","setSelectedImage","handleLike","handlePostClick","item","handlepostText","postText","onClick","url","src","class","likes","e","id","liked","category","placeholder","stopPropagation","value","onChange","comments","map","Maincontent","filterTerm","mostLiked","mostCommented","setMostLiked","setMostCommented","useState","data","setData","setPostText","useEffect","fetch","then","res","json","pics","newData","sort","a","b","length","obj","carditem","post","target","filter","toLowerCase","includes","Searchsection","searchTerm","setSearchTerm","Model","selectImage","alt","App","setSelectImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bad29b65.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function Header() \r\n{\r\n    return( <div className=\"App\">\r\n    <div className=\"header\"><h3>Imaginary</h3></div>\r\n  </div>);\r\n}","import React from \"react\";\r\n\r\n const  Card = ({setSelectedImage,handleLike,handlePostClick,item,handlepostText,postText}) => \r\n{\r\n\r\n    return(<div key = {item.id} className=\"card\">\r\n    <div className=\"img-container\" onClick = {() => setSelectedImage(item.url)}>\r\n      <img className=\"img\" src={item.url}></img>\r\n    </div>\r\n    <div class=\"comment-section\">\r\n        <div className=\"likes-container\">\r\n        <div className=\"likes\">{item.likes} </div>\r\n        <div className=\"like\" onClick={(e)=>{handleLike(e,item.id)}}><p className=\"like-link\">{item.liked ? \"Unlike\" : \"Like\"}</p> </div>\r\n        <div className=\"category\">{item.category}</div>\r\n        </div>\r\n        <div className=\"search-container\"> \r\n         <input placeholder=\"Type your comment here...\"  \r\n         onClick={(e)=>{e.stopPropagation()}} value={postText[item.id]} \r\n         onChange={(e)=>{\r\n           e.stopPropagation();\r\n           handlepostText(e,item.id);\r\n        }} className=\"search-box\"></input>  <button onClick={(e)=>{\r\n            handlePostClick(e,item.id);\r\n        }} className=\"post-button\">POST</button> </div>\r\n    </div>\r\n    <div className=\"comments-container\">\r\n    {item.comments.map((item)=>{\r\n        return(<div className=\"comment\">{item}</div>)\r\n    })}\r\n    \r\n    </div>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Card;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport Card from \"./card\";  \r\n\r\n\r\nexport default function Maincontent({setSelectedImage,filterTerm,mostLiked , mostCommented , setMostLiked , setMostCommented})\r\n{\r\n\r\n    const[data,setData] = useState([]);\r\n    const[postText,setPostText] = useState({});\r\n    \r\n    useEffect(()=>{\r\n        fetch(\"https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json\").then((res)=>res.json()).then((data)=>{\r\n            setData(data.pics.map((item)=>{\r\n                return {\r\n                    ...item,\r\n                    liked: false\r\n                }\r\n            }));\r\n        })\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(mostLiked==true)\r\n        {\r\n\r\n            let newData = [...data].sort((a,b)=>{\r\n                if(a.likes>b.likes)\r\n                {\r\n                    return -1;\r\n                }else\r\n                {\r\n                    return 1;\r\n                }\r\n            })\r\n            setData(newData);\r\n        }\r\n        if(mostCommented)\r\n        {\r\n            let newData = [...data].sort((a,b)=>{\r\n                if(a.comments.length>b.comments.length)\r\n                {\r\n                    return -1;\r\n                }else\r\n                {\r\n                    return 1;\r\n                }\r\n            })\r\n            setData(newData); \r\n        }\r\n\r\n     setMostLiked(false);\r\n     setMostCommented(false);\r\n\r\n    },[mostLiked,mostCommented]);\r\n\r\n\r\n    let handlePostClick = (e,id) => \r\n    {\r\n        e.stopPropagation();\r\n        let newData = data.map((item)=>{\r\n            if(item.id==id)\r\n            {\r\n\r\n            return    {\r\n                    ...item,\r\n                    comments :  [...item.comments,postText[id]]\r\n                }\r\n              \r\n            }\r\n            else\r\n            {\r\n                return {...item}\r\n            }\r\n        });\r\n\r\n        setData(newData);\r\n        let obj = {...postText}\r\n        obj[id]=\"\";\r\n        setPostText(obj);\r\n    }\r\n\r\n    let handlepostText = (e,id) => \r\n    {\r\n       let carditem = id;\r\n        let post = e.target.value;\r\n        let obj = {\r\n            ...postText,\r\n        }\r\n        obj[carditem]=post;\r\n\r\n        setPostText(obj);\r\n\r\n    }\r\n\r\n    let handleLike = (e,id) => \r\n    {\r\n        e.stopPropagation();\r\n        let newData = data.map((item)=>{\r\n            if(item.id==id)\r\n            {\r\n             return ({...item,\r\n                    liked:!item.liked,\r\n                    likes: item.liked == false ? item.likes+1 : item.likes-1\r\n            })   \r\n            }else\r\n            {\r\n                return {\r\n                    ...item\r\n                }\r\n            }\r\n        })\r\n        setData(newData);\r\n    }\r\n    return (<div class=\"grid\">\r\n\r\n{data.filter((item)=>{\r\n    return (item.category.toLowerCase().includes(filterTerm.toLowerCase()))\r\n}).map((item)=>{\r\nreturn (<Card item={item} postText={postText} handlepostText={handlepostText} setSelectedImage={setSelectedImage} handleLike={handleLike} handlePostClick={handlePostClick} />);\r\n})}\r\n    </div>);\r\n\r\n}","import react,{useState} from \"react\";\r\n\r\nexport default function Searchsection({searchTerm,setSearchTerm,setMostLiked , setMostCommented})\r\n{\r\n\r\n\r\n    return(<div class=\"main-search-container\">\r\n\r\n<div className=\"main-sort-item\">\r\n<p onClick={()=>{setMostLiked(true)}} >Most Liked</p>\r\n</div>\r\n<div className=\"border-line\"></div>\r\n<div className=\"main-sort-item\">\r\n<p className=\"most-commented\" onClick={()=>{setMostCommented(true)}}>Most Commented</p>\r\n</div>\r\n<div  className=\"main-search-input\">\r\n    <input placeholder=\"Search Images...\" className=\"main-searchbox\" value={searchTerm} onChange={(e)=>{setSearchTerm(e.target.value)}}></input>\r\n</div>\r\n\r\n    </div>)\r\n\r\n\r\n}","import React from 'react'\r\n\r\nconst Model = ({selectImage , setSelectedImage})  => {\r\n\r\n    const handleClick = (e) => {\r\n        setSelectedImage(null)\r\n    }\r\n    return (\r\n        <div className = 'img-backdrop' onClick = {handleClick}>\r\n            <img src = {selectImage} alt = 'big image' />\r\n        </div>\r\n    )\r\n}\r\nexport default Model","import React,{useState} from \"react\";\nimport './App.css';\nimport Header from \"./components/header\";\nimport Maincontent from \"./components/maincontent\";\nimport Searchsection from \"./components/searchsection\";\nimport ImageModal from \"./components/imagemodal\";\n\nfunction App() {\n\n  const [selectImage, setSelectImage] = useState(null);\n  const [searchTerm , setSearchTerm] = useState(\"\");\n  const [mostLiked , setMostLiked] = useState(false);\n  const [mostCommented,setMostCommented] = useState(false);\n\n  return (\n  <>\n    <Header/>\n    <Searchsection setMostLiked={setMostLiked} setMostCommented={setMostCommented} searchTerm={searchTerm} setSearchTerm={setSearchTerm}/>\n    <Maincontent setMostLiked={setMostLiked} setMostCommented={setMostCommented} mostLiked={mostLiked} mostCommented={mostCommented} filterTerm={searchTerm} setSelectedImage = {setSelectImage} />\n    {selectImage && <ImageModal selectImage = {selectImage} setSelectedImage = {setSelectImage}/>}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}